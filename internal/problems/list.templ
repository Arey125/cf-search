package problems

import (
	"cf-search/internal/ui"
	"fmt"
	"net/http"
	"strconv"
)

func errorHandler(w http.ResponseWriter, status int) {
	w.WriteHeader(status)
}

func serverErrorHandler(w http.ResponseWriter, err error) {
	fmt.Println(err)
	w.WriteHeader(http.StatusInternalServerError)
}

func (s Service) listPage(w http.ResponseWriter, r *http.Request) {
	h := s.htmx.NewHandler(w, r)
	if h.IsHxRequest() {
		s.PartialProblemListHandler(w, r)
		return
	}
	filters := filtersFromRequest(r)

	problems, last, err := s.model.GetPage(0, filters)
	if err != nil {
		serverErrorHandler(w, err)
	}
	err = list(problems, last).Render(r.Context(), w)
	if err != nil {
		serverErrorHandler(w, err)
	}
}

func (s Service) PartialProblemListHandler(w http.ResponseWriter, r *http.Request) {
	page, err := strconv.Atoi(r.URL.Query().Get("page"))
	if err != nil {
		serverErrorHandler(w, err)
	}

	filters := filtersFromRequest(r)
	problems, last, err := s.model.GetPage(page, filters)
	if err != nil {
		serverErrorHandler(w, err)
	}

	err = partialProblemList(problems, page, last).Render(r.Context(), w)
	if err != nil {
		serverErrorHandler(w, err)
	}
}

templ partialProblemList(problems []Problem, page int, last bool) {
	for _, problem := range problems {
		@problemCard(problem)
	}
	if !last {
		<div
			hx-get={ fmt.Sprintf("/?page=%d", page+1) }
			hx-target="this"
			hx-swap="outerHTML"
			hx-trigger="revealed"
			class="card skeleton-card"
		></div>
	}
}

templ list(problems []Problem, last bool) {
	@ui.Base() {
		<main
			class="problems-main"
			hx-include="[data-filter]"
			hx-target="#problems"
		>
			<div class="sidebar">
				<div class="card">
					<div
						class="filters"
						x-data="{rated: false}"
					>
						<h1 class="title">Filters</h1>
						<div class="filter-inputs" data-filter>
							@ratedCheckbox("rated", "Rated")
							@rangeInput("rating", "Rating")
						</div>
					</div>
				</div>
			</div>
			<div class="container">
				<div class="top-content">
					<div class="content">
						<h1>Problems</h1>
						<input
							id="search"
							name="search"
							class="input"
							type="text"
							hx-get="/?page=0"
							hx-trigger="input changed"
							data-filter
						/>
					</div>
				</div>
				<div class="content problem-list">
					<div id="problems">
						@partialProblemList(problems, 0, last)
					</div>
				</div>
			</div>
		</main>
	}
}

templ rangeInput(name string, title string) {
	<fieldset :disabled="!rated">
		@ui.RangeInput(name, title, templ.Attributes{
			"hx-get":     "/?page=0",
			"hx-trigger": "input changed",
		})
	</fieldset>
}

templ ratedCheckbox(name string, title string) {
	@ui.Checkbox(name, title, templ.Attributes{
		"hx-get":  "/?page=0",
		"x-model": "rated",
	})
}
